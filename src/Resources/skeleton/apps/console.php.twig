#!/usr/bin/env php
<?php

{% block use_statements %}
use Symfony\Component\Debug\Debug;

{% if multikernel %}
use Motana\Bundle\MultikernelBundle\Console\Input\ArgvInput;
use Motana\Bundle\MultikernelBundle\Console\MultikernelApplication;
{% else %}
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
{% endif %}
{% endblock use_statements %}

{% block permissions %}
// if you don't want to setup permissions the proper way, just uncomment the following PHP line
// read https://symfony.com/doc/current/book/installation.html#configuration-and-setup for more information
//umask(0000);
{% endblock permissions %}

set_time_limit(0);

{% block autoloader %}
/**
 * @var Composer\Autoload\ClassLoader $loader
 */
$loader = require __DIR__.'/../apps/autoload.php';
{% endblock autoloader %}

{% block parameters %}
$input = new ArgvInput();
$env = $input->getParameterOption(['--env', '-e'], getenv('SYMFONY_ENV') ?: 'dev');
$debug = getenv('SYMFONY_DEBUG') !== '0' && !$input->hasParameterOption(['--no-debug', '']) && $env !== 'prod';
{% endblock parameters %}

{% block debug %}
if ($debug) {
    Debug::enable();
}
{% endblock debug %}

{% block code %}
{% if multikernel %}
$kernel = new BootKernel($env, $debug);
$application = new MultikernelApplication($kernel);
{% else %}
$kernel = new AppKernel($env, $debug);
$application = new Application($kernel);
{% endif %}
$application->run($input);
{% endblock code %}
