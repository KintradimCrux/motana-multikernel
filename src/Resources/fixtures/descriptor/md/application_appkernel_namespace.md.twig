Motana Multi-Kernel App Console - Symfony `{{ kernel_version }}` (kernel: {{ kernel_name }}, env: test, debug: false)
==================================================================================={{ header_line }}

Commands in namespace "debug"
-----------------------------

**debug:**

* debug:autowiring
* debug:config
* debug:container
* debug:event-dispatcher
* debug:form
* debug:router
* debug:twig

Command "debug:autowiring"
--------------------------

* Description: Lists classes/interfaces you can use for autowiring
* Usage:

  * `./bin/console {{ kernel_name }} debug:autowiring [options] [--] [<search>]`

The `debug:autowiring` command displays all classes and interfaces that
you can use as type-hints for autowiring:

  `./bin/console debug:autowiring`

You can also pass a search term to filter the list:

  `./bin/console debug:autowiring log`

### Arguments:

**search:**

* Name: search
* Is required: no
* Is array: no
* Description: A search filter
* Default: `NULL`

### Options:

**help:**

* Name: `--help`
* Shortcut: `-h`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this help message
* Default: `false`

**quiet:**

* Name: `--quiet`
* Shortcut: `-q`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not output any message
* Default: `false`

**verbose:**

* Name: `--verbose`
* Shortcut: `-v|-vv|-vvv`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug
* Default: `false`

**version:**

* Name: `--version`
* Shortcut: `-V`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this application version
* Default: `false`

**ansi:**

* Name: `--ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Force ANSI output
* Default: `false`

**no-ansi:**

* Name: `--no-ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Disable ANSI output
* Default: `false`

**no-interaction:**

* Name: `--no-interaction`
* Shortcut: `-n`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not ask any interactive question
* Default: `false`

**env:**

* Name: `--env`
* Shortcut: `-e`
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The Environment name.
* Default: `'test'`

**no-debug:**

* Name: `--no-debug`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Switches off debug mode.
* Default: `false`

Command "debug:config"
----------------------

* Description: Dumps the current configuration for an extension
* Usage:

  * `./bin/console {{ kernel_name }} debug:config [options] [--] [<name>] [<path>]`

The `debug:config` command dumps the current configuration for an
extension/bundle.

Either the extension alias or bundle name can be used:

  `./bin/console debug:config framework`
  `./bin/console debug:config FrameworkBundle`

For dumping a specific option, add its path as second argument:

  `./bin/console debug:config framework serializer.enabled`

### Arguments:

**name:**

* Name: name
* Is required: no
* Is array: no
* Description: The bundle name or the extension alias
* Default: `NULL`

**path:**

* Name: path
* Is required: no
* Is array: no
* Description: The configuration option path
* Default: `NULL`

### Options:

**help:**

* Name: `--help`
* Shortcut: `-h`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this help message
* Default: `false`

**quiet:**

* Name: `--quiet`
* Shortcut: `-q`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not output any message
* Default: `false`

**verbose:**

* Name: `--verbose`
* Shortcut: `-v|-vv|-vvv`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug
* Default: `false`

**version:**

* Name: `--version`
* Shortcut: `-V`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this application version
* Default: `false`

**ansi:**

* Name: `--ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Force ANSI output
* Default: `false`

**no-ansi:**

* Name: `--no-ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Disable ANSI output
* Default: `false`

**no-interaction:**

* Name: `--no-interaction`
* Shortcut: `-n`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not ask any interactive question
* Default: `false`

**env:**

* Name: `--env`
* Shortcut: `-e`
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The Environment name.
* Default: `'test'`

**no-debug:**

* Name: `--no-debug`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Switches off debug mode.
* Default: `false`

Command "debug:container"
-------------------------

* Description: Displays current services for an application
* Usage:

  * `./bin/console {{ kernel_name }} debug:container [options] [--] [<name>]`

The `debug:container` command displays all configured public services:

  `./bin/console debug:container`

To get specific information about a service, specify its name:

  `./bin/console debug:container validator`

To see available types that can be used for autowiring, use the `--types` flag:

  `./bin/console debug:container --types`

By default, private services are hidden. You can display all services by
using the `--show-private` flag:

  `./bin/console debug:container --show-private`

Use the --tags option to display tagged public services grouped by tag:

  `./bin/console debug:container --tags`

Find all services with a specific tag by specifying the tag name with the `--tag` option:

  `./bin/console debug:container --tag=form.type`

Use the `--parameters` option to display all parameters:

  `./bin/console debug:container --parameters`

Display a specific parameter by specifying its name with the `--parameter` option:

  `./bin/console debug:container --parameter=kernel.debug`

### Arguments:

**name:**

* Name: name
* Is required: no
* Is array: no
* Description: A service name (foo)
* Default: `NULL`

### Options:

**show-private:**

* Name: `--show-private`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Used to show public *and* private services
* Default: `false`

**show-arguments:**

* Name: `--show-arguments`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Used to show arguments in services
* Default: `false`

**tag:**

* Name: `--tag`
* Shortcut: <none>
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: Shows all services with a specific tag
* Default: `NULL`

**tags:**

* Name: `--tags`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Displays tagged services for an application
* Default: `false`

**parameter:**

* Name: `--parameter`
* Shortcut: <none>
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: Displays a specific parameter for an application
* Default: `NULL`

**parameters:**

* Name: `--parameters`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Displays parameters for an application
* Default: `false`

**types:**

* Name: `--types`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Displays types (classes/interfaces) available in the container
* Default: `false`

**format:**

* Name: `--format`
* Shortcut: <none>
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The output format (txt, xml, json, or md)
* Default: `'txt'`

**raw:**

* Name: `--raw`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: To output raw description
* Default: `false`

**help:**

* Name: `--help`
* Shortcut: `-h`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this help message
* Default: `false`

**quiet:**

* Name: `--quiet`
* Shortcut: `-q`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not output any message
* Default: `false`

**verbose:**

* Name: `--verbose`
* Shortcut: `-v|-vv|-vvv`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug
* Default: `false`

**version:**

* Name: `--version`
* Shortcut: `-V`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this application version
* Default: `false`

**ansi:**

* Name: `--ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Force ANSI output
* Default: `false`

**no-ansi:**

* Name: `--no-ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Disable ANSI output
* Default: `false`

**no-interaction:**

* Name: `--no-interaction`
* Shortcut: `-n`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not ask any interactive question
* Default: `false`

**env:**

* Name: `--env`
* Shortcut: `-e`
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The Environment name.
* Default: `'test'`

**no-debug:**

* Name: `--no-debug`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Switches off debug mode.
* Default: `false`

Command "debug:event-dispatcher"
--------------------------------

* Description: Displays configured listeners for an application
* Usage:

  * `./bin/console {{ kernel_name }} debug:event-dispatcher [options] [--] [<event>]`

The `debug:event-dispatcher` command displays all configured listeners:

  `./bin/console debug:event-dispatcher`

To get specific listeners for an event, specify its name:

  `./bin/console debug:event-dispatcher kernel.request`

### Arguments:

**event:**

* Name: event
* Is required: no
* Is array: no
* Description: An event name
* Default: `NULL`

### Options:

**format:**

* Name: `--format`
* Shortcut: <none>
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The output format  (txt, xml, json, or md)
* Default: `'txt'`

**raw:**

* Name: `--raw`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: To output raw description
* Default: `false`

**help:**

* Name: `--help`
* Shortcut: `-h`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this help message
* Default: `false`

**quiet:**

* Name: `--quiet`
* Shortcut: `-q`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not output any message
* Default: `false`

**verbose:**

* Name: `--verbose`
* Shortcut: `-v|-vv|-vvv`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug
* Default: `false`

**version:**

* Name: `--version`
* Shortcut: `-V`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this application version
* Default: `false`

**ansi:**

* Name: `--ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Force ANSI output
* Default: `false`

**no-ansi:**

* Name: `--no-ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Disable ANSI output
* Default: `false`

**no-interaction:**

* Name: `--no-interaction`
* Shortcut: `-n`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not ask any interactive question
* Default: `false`

**env:**

* Name: `--env`
* Shortcut: `-e`
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The Environment name.
* Default: `'test'`

**no-debug:**

* Name: `--no-debug`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Switches off debug mode.
* Default: `false`

Command "debug:form"
--------------------

* Description: Displays form type information
* Usage:

  * `./bin/console {{ kernel_name }} debug:form [options] [--] [<class>] [<option>]`

The `debug:form` command displays information about form types.

  `./bin/console debug:form`

The command lists all built-in types, services types, type extensions and guessers currently available.

  `./bin/console debug:form Symfony\Component\Form\Extension\Core\Type\ChoiceType`
  `./bin/console debug:form ChoiceType`

The command lists all defined options that contains the given form type, as well as their parents and type extensions.

  `./bin/console debug:form ChoiceType choice_value`

The command displays the definition of the given option name.

  `./bin/console debug:form --format=json`

The command lists everything in a machine readable json format.

### Arguments:

**class:**

* Name: class
* Is required: no
* Is array: no
* Description: The form type class
* Default: `NULL`

**option:**

* Name: option
* Is required: no
* Is array: no
* Description: The form type option
* Default: `NULL`

### Options:

**format:**

* Name: `--format`
* Shortcut: <none>
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The output format (txt or json)
* Default: `'txt'`

**help:**

* Name: `--help`
* Shortcut: `-h`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this help message
* Default: `false`

**quiet:**

* Name: `--quiet`
* Shortcut: `-q`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not output any message
* Default: `false`

**verbose:**

* Name: `--verbose`
* Shortcut: `-v|-vv|-vvv`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug
* Default: `false`

**version:**

* Name: `--version`
* Shortcut: `-V`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this application version
* Default: `false`

**ansi:**

* Name: `--ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Force ANSI output
* Default: `false`

**no-ansi:**

* Name: `--no-ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Disable ANSI output
* Default: `false`

**no-interaction:**

* Name: `--no-interaction`
* Shortcut: `-n`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not ask any interactive question
* Default: `false`

**env:**

* Name: `--env`
* Shortcut: `-e`
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The Environment name.
* Default: `'test'`

**no-debug:**

* Name: `--no-debug`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Switches off debug mode.
* Default: `false`

Command "debug:router"
----------------------

* Description: Displays current routes for an application
* Usage:

  * `./bin/console {{ kernel_name }} debug:router [options] [--] [<name>]`

The `debug:router` displays the configured routes:

  `./bin/console debug:router`

### Arguments:

**name:**

* Name: name
* Is required: no
* Is array: no
* Description: A route name
* Default: `NULL`

### Options:

**show-controllers:**

* Name: `--show-controllers`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Show assigned controllers in overview
* Default: `false`

**format:**

* Name: `--format`
* Shortcut: <none>
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The output format (txt, xml, json, or md)
* Default: `'txt'`

**raw:**

* Name: `--raw`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: To output raw route(s)
* Default: `false`

**help:**

* Name: `--help`
* Shortcut: `-h`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this help message
* Default: `false`

**quiet:**

* Name: `--quiet`
* Shortcut: `-q`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not output any message
* Default: `false`

**verbose:**

* Name: `--verbose`
* Shortcut: `-v|-vv|-vvv`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug
* Default: `false`

**version:**

* Name: `--version`
* Shortcut: `-V`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this application version
* Default: `false`

**ansi:**

* Name: `--ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Force ANSI output
* Default: `false`

**no-ansi:**

* Name: `--no-ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Disable ANSI output
* Default: `false`

**no-interaction:**

* Name: `--no-interaction`
* Shortcut: `-n`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not ask any interactive question
* Default: `false`

**env:**

* Name: `--env`
* Shortcut: `-e`
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The Environment name.
* Default: `'test'`

**no-debug:**

* Name: `--no-debug`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Switches off debug mode.
* Default: `false`

Command "debug:twig"
--------------------

* Description: Shows a list of twig functions, filters, globals and tests
* Usage:

  * `./bin/console {{ kernel_name }} debug:twig [options] [--] [<filter>]`

The `debug:twig` command outputs a list of twig functions,
filters, globals and tests. Output can be filtered with an optional argument.

  `./bin/console debug:twig`

The command lists all functions, filters, etc.

  `./bin/console debug:twig date`

The command lists everything that contains the word date.

  `./bin/console debug:twig --format=json`

The command lists everything in a machine readable json format.

### Arguments:

**filter:**

* Name: filter
* Is required: no
* Is array: no
* Description: Show details for all entries matching this filter
* Default: `NULL`

### Options:

**format:**

* Name: `--format`
* Shortcut: <none>
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The output format (text or json)
* Default: `'text'`

**help:**

* Name: `--help`
* Shortcut: `-h`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this help message
* Default: `false`

**quiet:**

* Name: `--quiet`
* Shortcut: `-q`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not output any message
* Default: `false`

**verbose:**

* Name: `--verbose`
* Shortcut: `-v|-vv|-vvv`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug
* Default: `false`

**version:**

* Name: `--version`
* Shortcut: `-V`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Display this application version
* Default: `false`

**ansi:**

* Name: `--ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Force ANSI output
* Default: `false`

**no-ansi:**

* Name: `--no-ansi`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Disable ANSI output
* Default: `false`

**no-interaction:**

* Name: `--no-interaction`
* Shortcut: `-n`
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Do not ask any interactive question
* Default: `false`

**env:**

* Name: `--env`
* Shortcut: `-e`
* Accepts value: yes
* Is value required: yes
* Is multiple: no
* Description: The Environment name.
* Default: `'test'`

**no-debug:**

* Name: `--no-debug`
* Shortcut: <none>
* Accepts value: no
* Is value required: no
* Is multiple: no
* Description: Switches off debug mode.
* Default: `false`
